{"ast":null,"code":"import _toConsumableArray from \"/home/svina/twilio-video-react-hooks/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/svina/twilio-video-react-hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/svina/twilio-video-react-hooks/src/Participant.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\n\nvar Participant = function Participant(_ref) {\n  var participant = _ref.participant;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      videoTracks = _useState2[0],\n      setVideoTracks = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      audioTracks = _useState4[0],\n      setAudioTracks = _useState4[1];\n\n  var videoRef = useRef();\n  var audioRef = useRef();\n\n  var trackpubsToTracks = function trackpubsToTracks(trackMap) {\n    return Array.from(trackMap.values()).map(function (publication) {\n      return publication.track;\n    }).filter(function (track) {\n      return track !== null;\n    });\n  };\n\n  useEffect(function () {\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\n\n    var trackSubscribed = function trackSubscribed(track) {\n      if (track.kind === \"video\") {\n        setVideoTracks(function (videoTracks) {\n          return [].concat(_toConsumableArray(videoTracks), [track]);\n        });\n      } else if (track.kind === \"audio\") {\n        setAudioTracks(function (audioTracks) {\n          return [].concat(_toConsumableArray(audioTracks), [track]);\n        });\n      }\n    };\n\n    var trackUnsubscribed = function trackUnsubscribed(track) {\n      if (track.kind === \"video\") {\n        setVideoTracks(function (videoTracks) {\n          return videoTracks.filter(function (v) {\n            return v !== track;\n          });\n        });\n      } else if (track.kind === \"audio\") {\n        setAudioTracks(function (audioTracks) {\n          return audioTracks.filter(function (a) {\n            return a !== track;\n          });\n        });\n      }\n    };\n\n    participant.on(\"trackSubscribed\", trackSubscribed);\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\n    return function () {\n      setVideoTracks([]);\n      setAudioTracks([]);\n      participant.removeAllListeners();\n    };\n  }, [participant]);\n  useEffect(function () {\n    var videoTrack = videoTracks[0];\n\n    if (videoTrack) {\n      videoTrack.attach(videoRef.current);\n      return function () {\n        videoTrack.detach();\n      };\n    }\n  }, [videoTracks]);\n  useEffect(function () {\n    var audioTrack = audioTracks[0];\n\n    if (audioTrack) {\n      audioTrack.attach(audioRef.current);\n      return function () {\n        audioTrack.detach();\n      };\n    }\n  }, [audioTracks]);\n  return React.createElement(\"div\", {\n    className: \"participant\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, participant.identity), React.createElement(\"video\", {\n    ref: videoRef,\n    autoPlay: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"audio\", {\n    ref: audioRef,\n    autoPlay: true,\n    muted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }));\n};\n\nexport default Participant;","map":{"version":3,"sources":["/home/svina/twilio-video-react-hooks/src/Participant.js"],"names":["React","useState","useEffect","useRef","Participant","participant","videoTracks","setVideoTracks","audioTracks","setAudioTracks","videoRef","audioRef","trackpubsToTracks","trackMap","Array","from","values","map","publication","track","filter","trackSubscribed","kind","trackUnsubscribed","v","a","on","removeAllListeners","videoTrack","attach","current","detach","audioTrack","identity"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAqB;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAAA,kBACDJ,QAAQ,CAAC,EAAD,CADP;AAAA;AAAA,MAChCK,WADgC;AAAA,MACnBC,cADmB;;AAAA,mBAEDN,QAAQ,CAAC,EAAD,CAFP;AAAA;AAAA,MAEhCO,WAFgC;AAAA,MAEnBC,cAFmB;;AAIvC,MAAMC,QAAQ,GAAGP,MAAM,EAAvB;AACA,MAAMQ,QAAQ,GAAGR,MAAM,EAAvB;;AAEA,MAAMS,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD;AAAA,WACxBC,KAAK,CAACC,IAAN,CAAWF,QAAQ,CAACG,MAAT,EAAX,EACGC,GADH,CACO,UAACC,WAAD;AAAA,aAAiBA,WAAW,CAACC,KAA7B;AAAA,KADP,EAEGC,MAFH,CAEU,UAACD,KAAD;AAAA,aAAWA,KAAK,KAAK,IAArB;AAAA,KAFV,CADwB;AAAA,GAA1B;;AAKAjB,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,cAAc,CAACK,iBAAiB,CAACP,WAAW,CAACC,WAAb,CAAlB,CAAd;AACAG,IAAAA,cAAc,CAACG,iBAAiB,CAACP,WAAW,CAACG,WAAb,CAAlB,CAAd;;AAEA,QAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAACF,KAAD,EAAW;AACjC,UAAIA,KAAK,CAACG,IAAN,KAAe,OAAnB,EAA4B;AAC1Bf,QAAAA,cAAc,CAAC,UAACD,WAAD;AAAA,8CAAqBA,WAArB,IAAkCa,KAAlC;AAAA,SAAD,CAAd;AACD,OAFD,MAEO,IAAIA,KAAK,CAACG,IAAN,KAAe,OAAnB,EAA4B;AACjCb,QAAAA,cAAc,CAAC,UAACD,WAAD;AAAA,8CAAqBA,WAArB,IAAkCW,KAAlC;AAAA,SAAD,CAAd;AACD;AACF,KAND;;AAQA,QAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAACJ,KAAD,EAAW;AACnC,UAAIA,KAAK,CAACG,IAAN,KAAe,OAAnB,EAA4B;AAC1Bf,QAAAA,cAAc,CAAC,UAACD,WAAD;AAAA,iBAAiBA,WAAW,CAACc,MAAZ,CAAmB,UAACI,CAAD;AAAA,mBAAOA,CAAC,KAAKL,KAAb;AAAA,WAAnB,CAAjB;AAAA,SAAD,CAAd;AACD,OAFD,MAEO,IAAIA,KAAK,CAACG,IAAN,KAAe,OAAnB,EAA4B;AACjCb,QAAAA,cAAc,CAAC,UAACD,WAAD;AAAA,iBAAiBA,WAAW,CAACY,MAAZ,CAAmB,UAACK,CAAD;AAAA,mBAAOA,CAAC,KAAKN,KAAb;AAAA,WAAnB,CAAjB;AAAA,SAAD,CAAd;AACD;AACF,KAND;;AAQAd,IAAAA,WAAW,CAACqB,EAAZ,CAAe,iBAAf,EAAkCL,eAAlC;AACAhB,IAAAA,WAAW,CAACqB,EAAZ,CAAe,mBAAf,EAAoCH,iBAApC;AAEA,WAAO,YAAM;AACXhB,MAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,MAAAA,cAAc,CAAC,EAAD,CAAd;AACAJ,MAAAA,WAAW,CAACsB,kBAAZ;AACD,KAJD;AAKD,GA5BQ,EA4BN,CAACtB,WAAD,CA5BM,CAAT;AA8BAH,EAAAA,SAAS,CAAC,YAAM;AACd,QAAM0B,UAAU,GAAGtB,WAAW,CAAC,CAAD,CAA9B;;AACA,QAAIsB,UAAJ,EAAgB;AACdA,MAAAA,UAAU,CAACC,MAAX,CAAkBnB,QAAQ,CAACoB,OAA3B;AACA,aAAO,YAAM;AACXF,QAAAA,UAAU,CAACG,MAAX;AACD,OAFD;AAGD;AACF,GARQ,EAQN,CAACzB,WAAD,CARM,CAAT;AAUAJ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAM8B,UAAU,GAAGxB,WAAW,CAAC,CAAD,CAA9B;;AACA,QAAIwB,UAAJ,EAAgB;AACdA,MAAAA,UAAU,CAACH,MAAX,CAAkBlB,QAAQ,CAACmB,OAA3B;AACA,aAAO,YAAM;AACXE,QAAAA,UAAU,CAACD,MAAX;AACD,OAFD;AAGD;AACF,GARQ,EAQN,CAACvB,WAAD,CARM,CAAT;AAUA,SACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,WAAW,CAAC4B,QAAjB,CADF,EAEE;AAAO,IAAA,GAAG,EAAEvB,QAAZ;AAAsB,IAAA,QAAQ,EAAE,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAO,IAAA,GAAG,EAAEC,QAAZ;AAAsB,IAAA,QAAQ,EAAE,IAAhC;AAAsC,IAAA,KAAK,EAAE,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CArED;;AAuEA,eAAeP,WAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nconst Participant = ({ participant }) => {\n  const [videoTracks, setVideoTracks] = useState([]);\n  const [audioTracks, setAudioTracks] = useState([]);\n\n  const videoRef = useRef();\n  const audioRef = useRef();\n\n  const trackpubsToTracks = (trackMap) =>\n    Array.from(trackMap.values())\n      .map((publication) => publication.track)\n      .filter((track) => track !== null);\n\n  useEffect(() => {\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\n\n    const trackSubscribed = (track) => {\n      if (track.kind === \"video\") {\n        setVideoTracks((videoTracks) => [...videoTracks, track]);\n      } else if (track.kind === \"audio\") {\n        setAudioTracks((audioTracks) => [...audioTracks, track]);\n      }\n    };\n\n    const trackUnsubscribed = (track) => {\n      if (track.kind === \"video\") {\n        setVideoTracks((videoTracks) => videoTracks.filter((v) => v !== track));\n      } else if (track.kind === \"audio\") {\n        setAudioTracks((audioTracks) => audioTracks.filter((a) => a !== track));\n      }\n    };\n\n    participant.on(\"trackSubscribed\", trackSubscribed);\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\n\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n      participant.removeAllListeners();\n    };\n  }, [participant]);\n\n  useEffect(() => {\n    const videoTrack = videoTracks[0];\n    if (videoTrack) {\n      videoTrack.attach(videoRef.current);\n      return () => {\n        videoTrack.detach();\n      };\n    }\n  }, [videoTracks]);\n\n  useEffect(() => {\n    const audioTrack = audioTracks[0];\n    if (audioTrack) {\n      audioTrack.attach(audioRef.current);\n      return () => {\n        audioTrack.detach();\n      };\n    }\n  }, [audioTracks]);\n\n  return (\n    <div className=\"participant\">\n      <h3>{participant.identity}</h3>\n      <video ref={videoRef} autoPlay={true} />\n      <audio ref={audioRef} autoPlay={true} muted={true} />\n    </div>\n  );\n};\n\nexport default Participant;\n"]},"metadata":{},"sourceType":"module"}