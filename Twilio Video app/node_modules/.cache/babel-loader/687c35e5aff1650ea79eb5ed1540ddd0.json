{"ast":null,"code":"import _regeneratorRuntime from \"/home/svina/twilio-video-react-hooks/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/svina/twilio-video-react-hooks/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/svina/twilio-video-react-hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/svina/twilio-video-react-hooks/src/VideoChat.js\";\nimport React, { useState, useCallback } from 'react';\nimport Lobby from './Lobby';\nimport Room from './Room';\n\nvar VideoChat = function VideoChat() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      roomName = _useState4[0],\n      setRoomName = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      token = _useState6[0],\n      setToken = _useState6[1];\n\n  var handleUsernameChange = useCallback(function (event) {\n    setUsername(event.target.value);\n  }, []);\n  var handleRoomNameChange = useCallback(function (event) {\n    setRoomName(event.target.value);\n  }, []);\n  var handleSubmit = useCallback(\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(event) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              _context.next = 3;\n              return fetch('/video/token', {\n                method: 'POST',\n                body: JSON.stringify({\n                  identity: username,\n                  room: roomName\n                }),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              }).then(function (res) {\n                return res.json();\n              });\n\n            case 3:\n              data = _context.sent;\n              setToken(data.token);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [roomName, username]);\n  var handleLogout = useCallback(function (event) {\n    setToken(null);\n  }, []);\n  var render;\n\n  if (token) {\n    render = React.createElement(Room, {\n      roomName: roomName,\n      token: token,\n      handleLogout: handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  } else {\n    render = React.createElement(Lobby, {\n      username: username,\n      roomName: roomName,\n      handleUsernameChange: handleUsernameChange,\n      handleRoomNameChange: handleRoomNameChange,\n      handleSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n  }\n\n  return render;\n};\n\nexport default VideoChat;","map":{"version":3,"sources":["/home/svina/twilio-video-react-hooks/src/VideoChat.js"],"names":["React","useState","useCallback","Lobby","Room","VideoChat","username","setUsername","roomName","setRoomName","token","setToken","handleUsernameChange","event","target","value","handleRoomNameChange","handleSubmit","preventDefault","fetch","method","body","JSON","stringify","identity","room","headers","then","res","json","data","handleLogout","render"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA,kBACUJ,QAAQ,CAAC,EAAD,CADlB;AAAA;AAAA,MACfK,QADe;AAAA,MACLC,WADK;;AAAA,mBAEUN,QAAQ,CAAC,EAAD,CAFlB;AAAA;AAAA,MAEfO,QAFe;AAAA,MAELC,WAFK;;AAAA,mBAGIR,QAAQ,CAAC,IAAD,CAHZ;AAAA;AAAA,MAGfS,KAHe;AAAA,MAGRC,QAHQ;;AAKtB,MAAMC,oBAAoB,GAAGV,WAAW,CAAC,UAAAW,KAAK,EAAI;AAChDN,IAAAA,WAAW,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,GAFuC,EAErC,EAFqC,CAAxC;AAIA,MAAMC,oBAAoB,GAAGd,WAAW,CAAC,UAAAW,KAAK,EAAI;AAChDJ,IAAAA,WAAW,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,GAFuC,EAErC,EAFqC,CAAxC;AAIA,MAAME,YAAY,GAAGf,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,6BAC9B,iBAAMW,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACEA,cAAAA,KAAK,CAACK,cAAN;AADF;AAAA,qBAEqBC,KAAK,CAAC,cAAD,EAAiB;AACvCC,gBAAAA,MAAM,EAAE,MAD+B;AAEvCC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,kBAAAA,QAAQ,EAAElB,QADS;AAEnBmB,kBAAAA,IAAI,EAAEjB;AAFa,iBAAf,CAFiC;AAMvCkB,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT;AAN8B,eAAjB,CAAL,CAShBC,IATgB,CASX,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eATQ,CAFrB;;AAAA;AAEQC,cAAAA,IAFR;AAYEnB,cAAAA,QAAQ,CAACmB,IAAI,CAACpB,KAAN,CAAR;;AAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD8B;;AAAA;AAAA;AAAA;AAAA,OAe9B,CAACF,QAAD,EAAWF,QAAX,CAf8B,CAAhC;AAkBA,MAAMyB,YAAY,GAAG7B,WAAW,CAAC,UAAAW,KAAK,EAAI;AACxCF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAIA,MAAIqB,MAAJ;;AACA,MAAItB,KAAJ,EAAW;AACTsB,IAAAA,MAAM,GACJ,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAExB,QAAhB;AAA0B,MAAA,KAAK,EAAEE,KAAjC;AAAwC,MAAA,YAAY,EAAEqB,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJD,MAIO;AACLC,IAAAA,MAAM,GACJ,oBAAC,KAAD;AACE,MAAA,QAAQ,EAAE1B,QADZ;AAEE,MAAA,QAAQ,EAAEE,QAFZ;AAGE,MAAA,oBAAoB,EAAEI,oBAHxB;AAIE,MAAA,oBAAoB,EAAEI,oBAJxB;AAKE,MAAA,YAAY,EAAEC,YALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD;;AACD,SAAOe,MAAP;AACD,CApDD;;AAsDA,eAAe3B,SAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport Lobby from './Lobby';\nimport Room from './Room';\n\nconst VideoChat = () => {\n  const [username, setUsername] = useState('');\n  const [roomName, setRoomName] = useState('');\n  const [token, setToken] = useState(null);\n\n  const handleUsernameChange = useCallback(event => {\n    setUsername(event.target.value);\n  }, []);\n\n  const handleRoomNameChange = useCallback(event => {\n    setRoomName(event.target.value);\n  }, []);\n\n  const handleSubmit = useCallback(\n    async event => {\n      event.preventDefault();\n      const data = await fetch('/video/token', {\n        method: 'POST',\n        body: JSON.stringify({\n          identity: username,\n          room: roomName\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json());\n      setToken(data.token);\n    },\n    [roomName, username]\n  );\n\n  const handleLogout = useCallback(event => {\n    setToken(null);\n  }, []);\n\n  let render;\n  if (token) {\n    render = (\n      <Room roomName={roomName} token={token} handleLogout={handleLogout} />\n    );\n  } else {\n    render = (\n      <Lobby\n        username={username}\n        roomName={roomName}\n        handleUsernameChange={handleUsernameChange}\n        handleRoomNameChange={handleRoomNameChange}\n        handleSubmit={handleSubmit}\n      />\n    );\n  }\n  return render;\n};\n\nexport default VideoChat;\n"]},"metadata":{},"sourceType":"module"}